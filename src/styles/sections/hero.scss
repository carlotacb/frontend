$table-width: 1000px;
$table-height: $table-width * 0.2;

$screen-height: 60vh;
$screen-center-width: $screen-height * 3/2;
$screen-left-width: $screen-center-width * 0.8;
$screen-right-width: $screen-center-width * 0.8;
$screen-gap: $screen-height / 30;
$screen-depth: $table-height * 4.5;
$screen-y-pos: -1.25 * $table-height;
$screen-angle: 30deg;

$apply-depth: 40px;

$countdown-width: $screen-left-width/8;

.section--hero {
  // perspective: 100rem;
  background-color: $c-bg-dark;
  // 4rem for the bottom gap
  // 3rem for the nav heigth
  // height: calc(100vh - 4rem - 3rem);
  // height: calc((var(--vh, 1vh) * 100) - 4rem - 3rem);
  height: 800px;
  // max-height: calc((var(--vh, 1vh) * 100) - 2rem);
  // max-height: calc(100vh - 2rem);
  max-height: 90vh;
  max-width: unset;
  overflow: hidden;

  .hero-3d-space{
    perspective: 1000px;
    box-sizing: border-box;
    position: relative;
    transform-style: preserve-3d;
    perspective-origin: 50% 25vh;
    height: 100%;
    width: 100%;
    pointer-events: none;
    will-change: perspective-origin;

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: -30px;
      right: -30px;
      height: 30px;
      background-color: darken($c-bg-light, 8%);
      transform: rotateX(90deg);
      transform-origin: bottom center;
    }

    & > * {
      position: absolute;
    }

    & *, & *::before, & *::after {
      transform-style: preserve-3d;
      display: block;
      backface-visibility: hidden;
    }

    .clickable {
      pointer-events: all;
      cursor: pointer;
    }

    .selectable {
      pointer-events: all;
    }

    .subscreen, .table, .objects {
      background-color: $c-bg-light;
    }
    .screen {
      height: $screen-height;
      display: grid;
      gap: $screen-gap;

      & img { // TODO: remove
        width: 100%;
        height: 100%;
        object-fit: contain;
        box-sizing: border-box;
      }
    }
    .screen--left {
      grid-template-columns: 5fr 1fr;
      bottom: 0;
      right: calc(50% + #{$screen-center-width / 2 + $screen-gap / 2});
      width: $screen-left-width;
      transform-origin: right center;
      transform: translate3d(0,$screen-y-pos,-$screen-depth) rotateY($screen-angle);
      margin-right: $screen-gap / 2;
    }
    .screen--center {
      bottom: 0;
      left: calc(50% - #{$screen-center-width / 2});
      width: $screen-center-width;
      transform-origin: center center;
      transform: translate3d(0,$screen-y-pos,-$screen-depth);
    }
    .screen--right  {
      grid-template: 2fr 5fr / 1fr 1fr;
      grid-template-areas:
      'top top'
      'left right';
      bottom: 0;
      left: calc(50% + #{$screen-center-width / 2 + $screen-gap / 2});
      width: $screen-right-width;
      transform-origin: left center;
      transform: translate3d(0,$screen-y-pos,-$screen-depth) rotateY(-$screen-angle);
      margin-left: $screen-gap / 2;
    }

    @media screen and (max-height: 550px) {
      .screen--left {transform: translate3d(0,$screen-y-pos*0.8,-$screen-depth) rotateY($screen-angle);}
      .screen--center {transform: translate3d(0,$screen-y-pos*0.8,-$screen-depth);}
      .screen--right  {transform: translate3d(0,$screen-y-pos*0.8,-$screen-depth) rotateY(-$screen-angle);}
    }
    @media screen and (max-height: 450px) {
      .screen--left {transform: translate3d(0,$screen-y-pos*0.75,-$screen-depth) rotateY($screen-angle);}
      .screen--center {transform: translate3d(0,$screen-y-pos*0.75,-$screen-depth);}
      .screen--right  {transform: translate3d(0,$screen-y-pos*0.75,-$screen-depth) rotateY(-$screen-angle);}
    }
    @media screen and (max-height: 400px) {
      .screen--left {transform: translate3d(0,$screen-y-pos*0.7,-$screen-depth) rotateY($screen-angle);}
      .screen--center {transform: translate3d(0,$screen-y-pos*0.7,-$screen-depth);}
      .screen--right  {transform: translate3d(0,$screen-y-pos*0.7,-$screen-depth) rotateY(-$screen-angle);}
    }

    .subscreen::before {
      content: '';
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      height: $screen-gap * 2;
      background-color: darken($c-bg-light, 8%);
      transform: rotateX(-90deg);
      transform-origin: top center;
    }

    .screen--left .subscreen::after,
    .screen--right .subscreen::after {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      width: $screen-gap * 2;
      background-color: darken($c-bg-light, 8%);
    }
    .screen--left .subscreen::after {
      right: 100%;
      transform: rotateY(-90deg);
      transform-origin: right center;
    }
    .screen--right .subscreen::after{
      left: 100%;
      transform: rotateY(90deg);
      transform-origin: left center;
    }
    .subscreen {
      min-width: 0;
      min-height: 0;
    }
    .subscreen--map img {object-fit: cover;}
    .subscreen--timeline {grid-area: top;}
    .subscreen--rubberduck {grid-area: left;}
    .subscreen--plots {grid-area: right;}
    .table {
      width: $table-width;
      height: $table-height;
      transform-origin: bottom;
      left: calc(50% - #{$table-width / 2});
    }
    .table-front {
      bottom: 0;
      transform: translate3d(0,-10vh,0px) rotateX(90deg);
    }
    .table-back {
      bottom: 0;
      transform: translate3d(0,-10vh,-$table-height*2) rotateX(90deg);
    }
    .table-backface{
      background-color: transparent;
      pointer-events: none;
    }
    .table-backface::before {
      content: '';
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      height: 15px;
      background-color: darken($c-bg-light, 8%);
      transform: rotateX(-90deg);
      transform-origin: top center;
    }
    .table-backface::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: $c-bg-light;
      transform: rotateX(-180deg) translateZ(15px);
    }

    // Apply Button ----------------------
    .apply-button {
      background-color: $c-primary;
      padding: 1rem 1.9rem 1rem 2rem;
      text-transform: uppercase;
      font-weight: bold;
      letter-spacing: 0.1em;
      color: #fff;
      text-decoration: none;
      font-size: 1.25rem;
      line-height: 1;
      white-space: nowrap;
      position: relative;
      display: inline-block;
      transform: translate3d(calc(#{0.5 * $table-width} - 50%), 0, -0.4 * $table-height + $apply-depth/2);
      transform-origin: bottom center;
      transition: transform 150ms $ease-bounce;
      -webkit-tap-highlight-color: rgba(0,0,0,0);
    }

    .apply-button::before {
      content: '';
      position: absolute;
      transform: rotateX(90deg);
      transform-origin: bottom center;
      bottom: 100%;
      left: 0;
      right: 0;
      height: $apply-depth;
      background: #b14f50;
    }
    .apply-button__side {
      position: absolute;
      top: 0;
      bottom: 0;
      height: 100%;
      width: $apply-depth;
      background: #9c4749;
    }
    .apply-button__side--left{
      left: 100%;
      transform-origin: left center;
      transform: rotateY(90deg);
    }
    .apply-button__side--right{
      right: 100%;
      transform-origin: right center;
      transform: rotateY(-90deg);
    }
    .apply-button:active {
      transform: translate3d(calc(#{0.5 * $table-width} - 50%), 0, -0.4 * $table-height + $apply-depth/2) scale3d(1.2, 0.8, 1.2);
    }

    // Objects ----------------------
    .objects {
      width: $table-width;
      left: calc(50% - #{$table-width / 2});
      background-color: transparent;
      bottom: 0;
      right: 0;
      transform: translate3d(0, -10vh,-80px);
      transform-origin: bottom center;
      text-rendering: optimizeLegibility;
      font-smoothing: subpixel-antialiased;

      & > * {
        position: absolute;
        bottom: 0;
        left: 0;
      }
    }
    .objects-front { transform: translate3d(0, -10vh, -0 * $table-height); }
    .objects-back  { transform: translate3d(0, -10vh, -2 * $table-height); }

    $rocketBaseTransform: translate3d(calc(#{0.62 * $table-width} - 50%), 0%, -0.50 * $table-height);
    $glitchBaseTransform: translate3d(calc(#{0.50 * $table-width} - 50%), 0%, -0.50 * $table-height);
    $duckBaseTransform: translate3d(calc(#{0.196* $table-width} - 50%), 0%, -0.55 * $table-height);
    //                         <width>                               <x-pos>                         <z-pos>
    .object--pc-cowsay  {width: 15.00%; transform: translate3d(calc(#{0.20 * $table-width} - 50%), 0%, -0.50 * $table-height); pointer-events: none;}
    .object--pc-design  {width: 15.00%; transform: translate3d(calc(#{0.20 * $table-width} - 50%), 0%, -0.50 * $table-height);}
    .object--pc-glitch  {width: 15.00%; transform: $glitchBaseTransform;}
    .object--pc-thegame {width: 15.00%; transform: translate3d(calc(#{0.80 * $table-width} - 50%), 0%, -0.50 * $table-height);}
    .object--pc-double  {width: 29.50%; transform: translate3d(calc(#{0.80 * $table-width} - 50%), 0%, -0.50 * $table-height);}
    .object--rubber-duck{width:  5.00%; transform: $duckBaseTransform; transform-origin: center center; transition: transform 200ms $ease-bounce;}
    .object--mug-left   {width:  4.00%; transform: translate3d(calc(#{0.08 * $table-width} - 50%), 0%, -0.43 * $table-height);}
    .object--lego       {width:  5.00%; transform: translate3d(calc(#{0.32 * $table-width} - 50%), 0%, -0.70 * $table-height);}
    .object--rocket     {width:  3.00%; transform: $rocketBaseTransform;}
    .object--cactus     {width:  6.00%; transform: translate3d(calc(#{0.65 * $table-width} - 50%), 0%, -0.75 * $table-height);}
    .object--mug-right  {width:  4.00%; transform: translate3d(calc(#{0.93 * $table-width} - 50%), 0%, -0.73 * $table-height) scaleX(-1);}
    .object--lamp       {width: 23.00%; transform: translate3d(calc(#{0.87 * $table-width} - 50%), 0%, -0.25 * $table-height); transition: opacity 100ms $ease-quad;}
    .object--penholder  {width:  4.00%; transform: translate3d(calc(#{0.32 * $table-width} - 50%), 0%, -0.68 * $table-height);}
    .object--drink      {width:  3.50%; transform: translate3d(calc(#{0.95 * $table-width} - 50%), 0%, -0.22 * $table-height);}
    .object--pencil     {width:  6.00%; transform: translate3d(calc(#{0.27 * $table-width} - 50%),50%, -0.35 * $table-height) rotateX(90deg) scaleX(-1) rotateZ(40deg) rotateX(-60deg); transform-origin: center bottom;}
    .object--paper-text {width:  7.00%; transform: translate3d(calc(#{0.10 * $table-width} - 50%),49.9%, -0.40 * $table-height) rotateX(90deg) rotate(-3deg);}
    .object--paper-biene{width:  7.00%; transform: translate3d(calc(#{0.89 * $table-width} - 50%),49.9%, -0.32 * $table-height) rotateX(90deg) rotate(4deg);}

    .object--pc-cowsay::before,
    .object--pc-design::before,
    .object--pc-glitch::before,
    .object--pc-thegame::before,
    .object--pc-double::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      width: 100%;
      background-color: #000;
      opacity: 0.25;
      border-radius: 100%;
      height: 0.15 * $table-height;
      transform: translate(-50%, 49%) rotateX(90deg);
    }

    .object--rubber-duck:hover {
      transform: translate3d(calc(#{0.192 * $table-width} - 50%), 0%, -0.55 * $table-height) scale(1.5);
    }

    .duck-cliked {
      opacity: 0;
      animation: duck-up 1s $ease-bounce, duck-fade 300ms 700ms ease-out;
      transform: $duckBaseTransform translate3d(0,-$table-height,0);

      .rubber-duck-img {
        animation: duck-spin 1300ms $ease-quad;
      }
    }

    @keyframes duck-up {
      0%   {transform: $duckBaseTransform; opacity: 1;}
      100% {transform: $duckBaseTransform translate3d(0,-$table-height,0); opacity: 1;}
    }
    @keyframes duck-spin {
      0%   {transform: rotate(0deg) scale(1.5); }
      100% {transform: rotate(395deg) scale(0.5);}
    }
    @keyframes duck-fade {
      0%   {opacity: 1;}
      100% {opacity: 0;}
    }

    .sitting-silhouette {
      width: 0.15 * $table-width;
      left: 50%;
      bottom: 0;
      transform-origin: bottom;
      transform: translate3d(-50%, -4vh, -$table-height*1.5);
    }
    $silhoueteBasicTransform: translate3d(-50%, $screen-y-pos*0.25, -$screen-depth*0.6);
    .silhouette {
      height: $screen-center-width*0.46;
      left: 50%;
      bottom: 0;
      transform-origin: bottom;
      transform: $silhoueteBasicTransform;
    }
    .silhouette--left-left {
      height: $screen-center-width*0.47;
      transform:
        $silhoueteBasicTransform
        translate3d(-0.85*$screen-center-width,0,0);
    }
    .silhouette--left-right {
      transform:
        $silhoueteBasicTransform
        translate3d(-0.65*$screen-center-width,0,0);
    }
    .silhouette--right {
      // height: $screen-center-width*0.4;
      transform:
        $silhoueteBasicTransform
        translate3d(0.85*$screen-center-width,0,-$screen-depth*0.2)
        rotateY(-$screen-angle);
    }

    // Rocket animation ----------------------

    $rocketLunchDuration: 4s;
    $rocketFlyDuration: 3s;
    $rocketHideDuration: 1s;
    $rocketAppearDuration: 1s;
    .object--rocket{
      will-change: transform, opacity;
      transform-origin: center bottom;
      animation:
        rocket-lunch $rocketLunchDuration $ease-quad-in,
        rocket-shake ($rocketLunchDuration/100*2) $rocketLunchDuration linear infinite,
        rocket-hide $rocketHideDuration ($rocketFlyDuration + $rocketLunchDuration) linear,
        rocket-appear $rocketAppearDuration ($rocketHideDuration + $rocketFlyDuration + $rocketLunchDuration) cubic-bezier(0.44, 0.24, 0.21, 1.17);
    }
    .rocket-wrapper{
      will-change: transform;
      animation: rocket-fly $rocketFlyDuration $rocketLunchDuration cubic-bezier(0.32, 0.43, 0.86, -0.51);
    }
    .fire-img{
      position: absolute;
      top: 80%;
      transform-origin: center top;
      opacity: 0;
      animation:
      rocket-fire ($rocketLunchDuration/100*2) $rocketLunchDuration $ease-quad-in infinite alternate-reverse,
      rocket-hide $rocketAppearDuration ($rocketHideDuration + $rocketFlyDuration + $rocketLunchDuration) linear;
    }

    .stop-animation {
      animation: none;
      cursor: pointer;

      & * {
        animation: none;
      }
    }

    @keyframes rocket-lunch {
      @for $i from 0 through 100 {
        #{$i}% {transform: $rocketBaseTransform translateX($i * 0.125% * if($i % 2 == 0, 1, -1));}
      }
    }

    @keyframes rocket-shake {
      from {transform: $rocketBaseTransform translateX(+12.5%);}
      to   {transform: $rocketBaseTransform translateX(-12.5%);}
    }

    @keyframes rocket-fly {
      from {transform: translateY(0);}
      to   {transform: translateY(-100vh);}
    }

    @keyframes rocket-fire {
      from {opacity:1; transform: scale(0.75,0.5);}
      to   {opacity:1; transform: scale(1,1);}
    }

    @keyframes rocket-hide {
      from,to {opacity:0;}
    }

    @keyframes rocket-appear {
      from {opacity:0.6667; transform: $rocketBaseTransform scale(0);}
      to   {opacity:1; transform: $rocketBaseTransform scale(1);}
    }

    // Glitch animation -------------

    .object--pc-glitch-1 {
      animation: half-blink 250ms 50ms cubic-bezier(0.45, 0.05, 0.55, 0.95) infinite alternate-reverse;
      transform: $glitchBaseTransform;
      pointer-events: none;
    }
    .object--pc-glitch-2 {
      animation: half-blink 100ms cubic-bezier(0.45, 0.05, 0.55, 0.95) infinite alternate-reverse;
      transform: $glitchBaseTransform scaleX(-1);
      pointer-events: none;
    }

    @keyframes half-blink {
      from {opacity:0.25;}
      to   {opacity:0.75;}
    }

    // Cowsay animation ----------------
    .cowsay__overlay {
      position: absolute;
      top: 5.5%;
      left: 5%;
      right: 5%;
      bottom: 40%;
      background-color: #33323f;
      transform-origin: bottom center;
      transform: scaleY(0);

      $cowsay-time: 3000ms;
      $cowsay-delay: 2000ms;

      animation: 
        wait-breakpoint-0 1*$cowsay-time + $cowsay-delay,
        wait-breakpoint-1 1*$cowsay-time 1*$cowsay-time + $cowsay-delay,
        show-result-cmd-2  0.2*$cowsay-time 2*$cowsay-time + $cowsay-delay steps(8);
        
      $overlay-break-point-0: 0.92;
      $overlay-break-point-1: 0.82;
      $overlay-break-point-2: 0.0;

      @keyframes show-cmd-1 {
        0%  {transform: scaleY($overlay-break-point-0);}
        100%{transform: scaleY($overlay-break-point-1);}
      }
      @keyframes show-result-cmd-2 {
        0%  {transform: scaleY($overlay-break-point-1);}
        100%{transform: scaleY($overlay-break-point-2);}
      }
      @keyframes wait-breakpoint-0{0%,100%{transform:scaleY($overlay-break-point-0);}}
      @keyframes wait-breakpoint-1{0%,100%{transform:scaleY($overlay-break-point-1);}}

      .cowsay__overlay--cmd {
        position: absolute;
        bottom: 99%;
        left: 44%;
        right: 0;
        top: -11%;
        transform-origin: center right;
        background-color: #33323f;
        transform: scaleX(0);
        animation: 
          display-line $cowsay-delay step-end,
          show-line $cowsay-time $cowsay-delay steps(16,end) 2;

        @keyframes display-line {
          0%,100% {transform: scaleX(1);}
        }
        @keyframes show-line {
          0%  {transform: scaleX(1);}
          50%  {transform: scaleX(1);}
          90% {transform: scaleX(0);}
          100%{transform: scaleX(0);}
        }
      }
    }

    $titleFontSize: $screen-center-width / 11.5;
    // Title screen ----------------------
    .subscreen--title {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      font-size: $titleFontSize;
      text-transform: uppercase;
      line-height: 0.75;
      white-space: nowrap;

      .title__title {
        font-weight: 400;
        margin: 0;
        margin-left: -0.1em;
      }
      .title__title--bold {
        font-weight: 700;
        display: inline-block;
      }
      .title__more-info {
        font-weight: 600;
        font-size: 0.6667 * $titleFontSize;
        margin: 0;
        margin-top: 0.5 * $titleFontSize;
        display: flex;
        justify-content: space-between;
        width: 10.25 * $titleFontSize;


        .title__hackers {

        }
        .title__hours {

        }
      }
      .title__date {
        margin: 0;
        margin-top: 1 * $titleFontSize;
        font-size: 1em;
        font-weight: 600;
        letter-spacing: 0.1 * $titleFontSize;
      }
    }

    // Countdown screen ----------------------
    .countdown {
      height: 100%;
      display: flex;
      justify-content: space-between;
      flex-direction: column;
      box-sizing: border-box;
      padding: $screen-height/30 0;

      .countdown__cell {

        .countdown__circle {
          background-color: $c-bg-dark;
          display: block;
          width: $countdown-width;
          height: $countdown-width;
          border-radius: 100%;
          margin: auto;
          position: relative;
        }
        .countdown__number {
          position: absolute;
          width: 4em;
          height: 1em;
          top: 50%;
          left: 50%;
          transform: translate(-2em,-0.5em);
          font-size: $countdown-width / 2;
          font-weight: bold;
          will-change: contents;
          line-height: 1;
          text-align: center;
        }

        .countdown__label {
          font-size: $countdown-width / 5;
          font-weight: bold;
          text-align: center;
          margin: $countdown-width / 10 auto 0;
          white-space: nowrap;
          text-transform: uppercase;
          color: $c-bg-lighter;

          .countdown__label-plural {
            display: inline-block;
          }
        }
      }
    }

    // Countdown screen ----------------------

    .subscreen--rubberduck {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;

      .wanted__duck {
        width: 47.5%;
        height: auto;
      }
      .wanted__sign {
        display: block;
        margin: 0.66em 0;
        font-size: $screen-height/14;
        font-weight: 800;
        color: $c-bg-lighter;
      }
      .wanted__list {
        display: flex;
        background-color: #483a7b;
        border-radius: $screen-height/25;
        padding: $screen-height/90 $screen-height/45;
        position: relative;

        .wanted__duck-silhouette {
          height: $screen-height/18;
          width: auto;
          margin: $screen-height/150;
          opacity: 0.4;
        }
        .wanted__duck-silhouette--missing {
          animation: soft-fade-in 2000ms cubic-bezier(0.67, 0, 0.33, 1) infinite alternate-reverse;
        }
        .wanted__tooltip {
          position: absolute;
          top: 100%;
          left: -10%;
          right: 10%;
          width: 120%;
          text-align: center;
          font-size: $screen-height/30;
          white-space: nowrap;
          font-weight: bold;
          letter-spacing: 0.1em;
          color: $c-bg-lighter;
          text-transform: uppercase;
          display: block;
          transform: translateY(-100%) scale(1);
          padding: $screen-height/45 0 ;
          opacity: 0;
          transition: transform 200ms ease-out, opacity 200ms ease-out;
        }
        &:hover .wanted__tooltip {
          transform: none;
          opacity: 1;
        }

        .wanted__duck-silhouette--found {
          animation:
          found-duck-scale-down 200ms $ease-quad,
          found-duck-fade-in 200ms cubic-bezier(0.55, 0.06, 0.68, 0.19);
          opacity: 0.4;
        }

      }
      @keyframes found-duck-scale-down {
        from {transform: translateZ($screen-height/2) scale(50);}
        to   {transform: none;}
      }
      @keyframes found-duck-fade-in {
        from {opacity:0;}
        to   {opacity:0.4;}
      }
    }
    @keyframes soft-fade-in {
      from {opacity:0.05;}
      to   {opacity:0.4;}
    }
  }
}
