@use "sass:map";

.section--sponsors,
.section--partners {
  background-color: $c-sponsors-bg;
  color: $c-bg-dark;
}

.section--partners > .content__wrapper {
  padding-top: 0;
}

$logo-height: 8rem;

.logo__list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding-left: 0;
  margin: 0 -0.5rem;
}

.logo__item {
  position: relative;
  display: block;
  height: $logo-height;
  flex-basis: calc(100% / 4 - 1rem);
  margin: 0.5rem;
  background-color: #fff;
  border-radius: 1em;
  box-shadow: 0 1rem 1rem -0.5rem $c-sponsors-shadow;
  color: $c-bg-dark;
  font-size: $logo-height/8;
  transition: transform 50ms $ease-quad, box-shadow 50ms $ease-quad;
  user-select: none;

  &::before,
  &::after {
    position: absolute;
    content: '';
    opacity: 0;
    pointer-events: none;
  }

  &::before {
    z-index: 1;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    backdrop-filter: blur(0.5rem);
    background-color: rgba(255, 255, 255, 0.25);
    border-radius: 1em;
    pointer-events: none;
    transition: opacity 400ms cubic-bezier(0.23, 0.96, 0.17, 1);
    // will-change: opacity;
  }

  &::after {
    z-index: 2;
    top: 50%;
    right: 0;
    left: 0;
    content: 'Go to website';
    font-size: 1.5em;
    font-weight: bold;
    letter-spacing: 0.03em;
    transform: translate(0, -50%) translateY(1em);
    transition: opacity 300ms $ease-quad, transform 200ms $ease-quad;
    // will-change: transform, opacity;
  }

  &:hover {
    &::before {
      opacity: 1;
    }

    &::after {
      opacity: 1;
      transform: translate(0, -50%) translateY(0);
    }
    @supports not (backdrop-filter: blur(0.5rem)) {
      .logo__image {
        filter: blur(0.5rem);
      }
    }
  }

  &:active {
    box-shadow: 0 1rem 1rem -0.5rem transparent;
    transform: scale(0.975) translateY(0.25rem);
  }
}

.logo {
  $package-props: (
    'tera': (
      'height': $logo-height,
      'width': 100% / 3,
    ),
    'giga': (
      'height': $logo-height * 0.85,
      'width': 100% / 4,
    ),
    'mega': (
      'height': $logo-height * 0.85 * 0.85,
      'width': 100% / 5,
    ),
    'kilo': (
      'height': $logo-height * 0.85 * 0.85 * 0.85,
      'width': 100% / 6,
    ),
    'mili': (
      'height': $logo-height * 0.85 * 0.85 * 0.85 * 0.85,
      'width': 100% / 7,
    ),
  );

  &__link {
    display: block;
    height: 100%;
  }

  &__image {
    display: block;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    padding: 1.5em 0.4em;
    object-fit: contain;
    transition: filter 400ms cubic-bezier(0.23, 0.96, 0.17, 1);
  }

  &__item--unrevealed {
    cursor: help;

    &::after {
      color: $c-bg-dark;
      content: 'Top secret';
      text-transform: uppercase;
    }

    &__link {
      pointer-events: none;
    }

    &__image {
      opacity: 0.5;
    }
  }

  @each $package, $props in $package-props {
    &__list--#{$package} &__item {
      height: map.get($props, 'height');
      flex-basis: calc(#{map.get($props, 'width')} - 1rem);
      font-size: map.get($props, 'height') / 8;
    }
  }

  @media screen and (max-width: 1000px) {
    &__item {
      margin: 0.8vw;
    }
  }

  @media screen and (max-width: 1000px) {
    &__list {
      margin: 0 -0.8vw;
    }

    @each $package, $props in $package-props {
      &__list--#{$package} &__item {
        height: map.get($props, 'height') / 1rem * 1.6vw;
        flex-basis: calc(#{map.get($props, 'width')} - 1.6vw);
        font-size: map.get($props, 'height') / 8 / 1rem * 1.6vw;
      }
    }
  }

  @media screen and (max-width: 750px) {
    @each $package, $props in $package-props {
      &__list--#{$package} &__item {
        height: map.get($props, 'height');
        flex-basis: calc(#{map.get($props, 'width')} - 1rem);
        font-size: map.get($props, 'height') / 8;
      }
    }
  }
}

@import 'sponsors/logo-alignments';
